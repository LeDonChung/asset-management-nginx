events {
    worker_connections 1024;
}

http {
    upstream api_backend {
        server 34.158.42.23:3000;
    }

    upstream socket_backend {
        server 34.158.42.23:3001;
    }

    upstream asset_backend {
        server 34.158.42.23:3002;
    }

    # Rate limiting
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=general:10m rate=5r/s;

    # SSL Configuration
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;

    # API Service - HTTP to HTTPS redirect
    server {
        listen 80;
        server_name api.codeshare.id.vn;
        
        # Let's Encrypt challenge
        location /.well-known/acme-challenge/ {
            root /var/www/certbot;
        }
        
        location / {
            return 301 https://$server_name$request_uri;
        }
    }

    # API Service - HTTPS
    server {
        listen 443 ssl http2;
        server_name api.codeshare.id.vn;

        ssl_certificate /etc/letsencrypt/live/api.codeshare.id.vn/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/api.codeshare.id.vn/privkey.pem;

        location / {
            limit_req zone=api burst=20 nodelay;
            
            proxy_pass http://api_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # CORS is handled by the NestJS application
            # Removed duplicate CORS headers to prevent conflicts
        }
    }

    # Socket Service - HTTP to HTTPS redirect
    server {
        listen 80;
        server_name socket.codeshare.id.vn;
        
        # Let's Encrypt challenge
        location /.well-known/acme-challenge/ {
            root /var/www/certbot;
        }
        
        location / {
            return 301 https://$server_name$request_uri;
        }
    }

    # Socket Service - HTTPS
    server {
        listen 443 ssl http2;
        server_name socket.codeshare.id.vn;

        ssl_certificate /etc/letsencrypt/live/api.codeshare.id.vn/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/api.codeshare.id.vn/privkey.pem;

        location / {
            limit_req zone=general burst=10 nodelay;
            
            proxy_pass http://socket_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # WebSocket support
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_cache_bypass $http_upgrade;
            
            # Socket.IO specific
            proxy_buffering off;
            proxy_read_timeout 86400;
        }
    }

    # Asset Service - HTTP to HTTPS redirect
    server {
        listen 80;
        server_name asset.codeshare.id.vn;
        
        # Let's Encrypt challenge
        location /.well-known/acme-challenge/ {
            root /var/www/certbot;
        }
        
        location / {
            return 301 https://$server_name$request_uri;
        }
    }

    # Asset Service - HTTPS (có hỗ trợ WebSocket)
    server {
        listen 443 ssl http2;
        server_name asset.codeshare.id.vn;

        ssl_certificate /etc/letsencrypt/live/api.codeshare.id.vn/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/api.codeshare.id.vn/privkey.pem;

        location / {
            limit_req zone=general burst=15 nodelay;
            
            proxy_pass http://asset_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # WebSocket support cho asset service
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_cache_bypass $http_upgrade;
            
            # CORS is handled by the NestJS application
            # Removed duplicate CORS headers to prevent conflicts
            
            # Socket.IO specific cho asset service
            proxy_buffering off;
            proxy_read_timeout 86400;
        }
    }

    # Default server block
    server {
        listen 80 default_server;
        listen 443 ssl default_server;
        server_name _;
        
        ssl_certificate /etc/letsencrypt/live/api.codeshare.id.vn/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/api.codeshare.id.vn/privkey.pem;
        
        return 444;
    }
}
